// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.ui;

import ch.unibas.medizin.osce.client.managed.request.CourseProxy;
import ch.unibas.medizin.osce.client.managed.request.OsceDayProxy;
import ch.unibas.medizin.osce.client.managed.request.OsceProxy;
import ch.unibas.medizin.osce.client.managed.request.SemesterProxy;
import ch.unibas.medizin.osce.client.managed.request.StudentOscesProxy;
import ch.unibas.medizin.osce.client.managed.request.TaskProxy;
import ch.unibas.medizin.osce.client.scaffold.place.AbstractProxyListView;
import ch.unibas.medizin.osce.shared.StudyYears;
import com.google.gwt.core.client.GWT;
import com.google.gwt.i18n.client.DateTimeFormat;
import com.google.gwt.text.client.DateTimeFormatRenderer;
import com.google.gwt.text.shared.AbstractRenderer;
import com.google.gwt.text.shared.Renderer;
import com.google.gwt.uibinder.client.UiBinder;
import com.google.gwt.uibinder.client.UiField;
import com.google.gwt.user.cellview.client.CellTable;
import com.google.gwt.user.cellview.client.HasKeyboardSelectionPolicy.KeyboardSelectionPolicy;
import com.google.gwt.user.cellview.client.TextColumn;
import com.google.gwt.user.client.ui.Button;
import com.google.gwt.user.client.ui.HTMLPanel;
import java.util.HashSet;
import java.util.Set;

public abstract class OsceListView_Roo_Gwt extends AbstractProxyListView<OsceProxy> {

    @UiField
    CellTable<OsceProxy> table;

    protected Set<String> paths = new HashSet<String>();

    public void init() {
        paths.add("studyYear");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<ch.unibas.medizin.osce.shared.StudyYears> renderer = new AbstractRenderer<ch.unibas.medizin.osce.shared.StudyYears>() {

                public String render(ch.unibas.medizin.osce.shared.StudyYears obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getStudyYear());
            }
        }, "Study Year");
        paths.add("maxNumberStudents");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getMaxNumberStudents());
            }
        }, "Max Number Students");
        paths.add("numberPosts");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getNumberPosts());
            }
        }, "Number Posts");
        paths.add("numberCourses");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getNumberCourses());
            }
        }, "Number Courses");
        paths.add("postLength");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getPostLength());
            }
        }, "Post Length");
        paths.add("isRepeOsce");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Boolean> renderer = new AbstractRenderer<java.lang.Boolean>() {

                public String render(java.lang.Boolean obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getIsRepeOsce());
            }
        }, "Is Repe Osce");
        paths.add("numberRooms");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getNumberRooms());
            }
        }, "Number Rooms");
        paths.add("isValid");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Boolean> renderer = new AbstractRenderer<java.lang.Boolean>() {

                public String render(java.lang.Boolean obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getIsValid());
            }
        }, "Is Valid");
        paths.add("semester");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<ch.unibas.medizin.osce.client.managed.request.SemesterProxy> renderer = ch.unibas.medizin.osce.client.managed.ui.SemesterProxyRenderer.instance();

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getSemester());
            }
        }, "Semester");
        paths.add("osce_days");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.util.Set> renderer = ch.unibas.medizin.osce.client.scaffold.place.CollectionRenderer.of(ch.unibas.medizin.osce.client.managed.ui.OsceDayProxyRenderer.instance());

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getOsce_days());
            }
        }, "Osce_days");
        paths.add("courses");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.util.Set> renderer = ch.unibas.medizin.osce.client.scaffold.place.CollectionRenderer.of(ch.unibas.medizin.osce.client.managed.ui.CourseProxyRenderer.instance());

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getCourses());
            }
        }, "Courses");
        paths.add("tasks");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.util.Set> renderer = ch.unibas.medizin.osce.client.scaffold.place.CollectionRenderer.of(ch.unibas.medizin.osce.client.managed.ui.TaskProxyRenderer.instance());

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getTasks());
            }
        }, "Tasks");
        paths.add("osceStudents");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.util.Set> renderer = ch.unibas.medizin.osce.client.scaffold.place.CollectionRenderer.of(ch.unibas.medizin.osce.client.managed.ui.StudentOscesProxyRenderer.instance());

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getOsceStudents());
            }
        }, "Osce Students");
        paths.add("id");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Long> renderer = new AbstractRenderer<java.lang.Long>() {

                public String render(java.lang.Long obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getId());
            }
        }, "Id");
        paths.add("version");
        table.addColumn(new TextColumn<OsceProxy>() {

            Renderer<java.lang.Integer> renderer = new AbstractRenderer<java.lang.Integer>() {

                public String render(java.lang.Integer obj) {
                    return obj == null ? "" : String.valueOf(obj);
                }
            };

            @Override
            public String getValue(OsceProxy object) {
                return renderer.render(object.getVersion());
            }
        }, "Version");
    }
}
