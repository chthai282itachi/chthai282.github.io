// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.activity;

import ch.unibas.medizin.osce.client.managed.request.AdministratorProxy;
import ch.unibas.medizin.osce.client.managed.request.AdvancedSearchCriteriaProxy;
import ch.unibas.medizin.osce.client.managed.request.AnamnesisCheckProxy;
import ch.unibas.medizin.osce.client.managed.request.AnamnesisChecksValueProxy;
import ch.unibas.medizin.osce.client.managed.request.AnamnesisFormProxy;
import ch.unibas.medizin.osce.client.managed.request.ApplicationEntityTypesProcessor;
import ch.unibas.medizin.osce.client.managed.request.ApplicationRequestFactory;
import ch.unibas.medizin.osce.client.managed.request.AssignmentProxy;
import ch.unibas.medizin.osce.client.managed.request.BankaccountProxy;
import ch.unibas.medizin.osce.client.managed.request.CheckListProxy;
import ch.unibas.medizin.osce.client.managed.request.ChecklistCriteriaProxy;
import ch.unibas.medizin.osce.client.managed.request.ChecklistOptionProxy;
import ch.unibas.medizin.osce.client.managed.request.ChecklistQuestionProxy;
import ch.unibas.medizin.osce.client.managed.request.ChecklistTopicProxy;
import ch.unibas.medizin.osce.client.managed.request.ClinicProxy;
import ch.unibas.medizin.osce.client.managed.request.CourseProxy;
import ch.unibas.medizin.osce.client.managed.request.DescriptionProxy;
import ch.unibas.medizin.osce.client.managed.request.DoctorProxy;
import ch.unibas.medizin.osce.client.managed.request.EliminationCriterionProxy;
import ch.unibas.medizin.osce.client.managed.request.FileProxy;
import ch.unibas.medizin.osce.client.managed.request.KeywordProxy;
import ch.unibas.medizin.osce.client.managed.request.LangSkillProxy;
import ch.unibas.medizin.osce.client.managed.request.LogEntryProxy;
import ch.unibas.medizin.osce.client.managed.request.MaterialListProxy;
import ch.unibas.medizin.osce.client.managed.request.MediaContentProxy;
import ch.unibas.medizin.osce.client.managed.request.MediaContentTypeProxy;
import ch.unibas.medizin.osce.client.managed.request.NationalityProxy;
import ch.unibas.medizin.osce.client.managed.request.OfficeProxy;
import ch.unibas.medizin.osce.client.managed.request.OsceDayProxy;
import ch.unibas.medizin.osce.client.managed.request.OscePostProxy;
import ch.unibas.medizin.osce.client.managed.request.OscePostRoomProxy;
import ch.unibas.medizin.osce.client.managed.request.OsceProxy;
import ch.unibas.medizin.osce.client.managed.request.PatientInRoleProxy;
import ch.unibas.medizin.osce.client.managed.request.PatientInSemesterProxy;
import ch.unibas.medizin.osce.client.managed.request.ProfessionProxy;
import ch.unibas.medizin.osce.client.managed.request.RoleBaseItemProxy;
import ch.unibas.medizin.osce.client.managed.request.RoleItemAccessProxy;
import ch.unibas.medizin.osce.client.managed.request.RoleParticipantProxy;
import ch.unibas.medizin.osce.client.managed.request.RoleSubItemValueProxy;
import ch.unibas.medizin.osce.client.managed.request.RoleTableItemProxy;
import ch.unibas.medizin.osce.client.managed.request.RoleTableItemValueProxy;
import ch.unibas.medizin.osce.client.managed.request.RoleTemplateProxy;
import ch.unibas.medizin.osce.client.managed.request.RoleTopicProxy;
import ch.unibas.medizin.osce.client.managed.request.RoomProxy;
import ch.unibas.medizin.osce.client.managed.request.ScarProxy;
import ch.unibas.medizin.osce.client.managed.request.SemesterProxy;
import ch.unibas.medizin.osce.client.managed.request.SimpleSearchCriteriaProxy;
import ch.unibas.medizin.osce.client.managed.request.SpecialisationProxy;
import ch.unibas.medizin.osce.client.managed.request.SpokenLanguageProxy;
import ch.unibas.medizin.osce.client.managed.request.StandardizedPatientProxy;
import ch.unibas.medizin.osce.client.managed.request.StandardizedRoleProxy;
import ch.unibas.medizin.osce.client.managed.request.StudentOscesProxy;
import ch.unibas.medizin.osce.client.managed.request.StudentProxy;
import ch.unibas.medizin.osce.client.managed.request.TaskProxy;
import ch.unibas.medizin.osce.client.managed.request.UsedMaterialProxy;
import ch.unibas.medizin.osce.client.managed.ui.AdministratorListView;
import ch.unibas.medizin.osce.client.managed.ui.AdministratorMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.AdvancedSearchCriteriaListView;
import ch.unibas.medizin.osce.client.managed.ui.AdvancedSearchCriteriaMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.AnamnesisCheckListView;
import ch.unibas.medizin.osce.client.managed.ui.AnamnesisCheckMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.AnamnesisChecksValueListView;
import ch.unibas.medizin.osce.client.managed.ui.AnamnesisChecksValueMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.AnamnesisFormListView;
import ch.unibas.medizin.osce.client.managed.ui.AnamnesisFormMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.AssignmentListView;
import ch.unibas.medizin.osce.client.managed.ui.AssignmentMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.BankaccountListView;
import ch.unibas.medizin.osce.client.managed.ui.BankaccountMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.CheckListListView;
import ch.unibas.medizin.osce.client.managed.ui.CheckListMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistCriteriaListView;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistCriteriaMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistOptionListView;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistOptionMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistQuestionListView;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistQuestionMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistTopicListView;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistTopicMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.ClinicListView;
import ch.unibas.medizin.osce.client.managed.ui.ClinicMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.CourseListView;
import ch.unibas.medizin.osce.client.managed.ui.CourseMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.DescriptionListView;
import ch.unibas.medizin.osce.client.managed.ui.DescriptionMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.DoctorListView;
import ch.unibas.medizin.osce.client.managed.ui.DoctorMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.EliminationCriterionListView;
import ch.unibas.medizin.osce.client.managed.ui.EliminationCriterionMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.FileListView;
import ch.unibas.medizin.osce.client.managed.ui.FileMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.KeywordListView;
import ch.unibas.medizin.osce.client.managed.ui.KeywordMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.LangSkillListView;
import ch.unibas.medizin.osce.client.managed.ui.LangSkillMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.LogEntryListView;
import ch.unibas.medizin.osce.client.managed.ui.LogEntryMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.MaterialListListView;
import ch.unibas.medizin.osce.client.managed.ui.MaterialListMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.MediaContentListView;
import ch.unibas.medizin.osce.client.managed.ui.MediaContentMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.MediaContentTypeListView;
import ch.unibas.medizin.osce.client.managed.ui.MediaContentTypeMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.NationalityListView;
import ch.unibas.medizin.osce.client.managed.ui.NationalityMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.OfficeListView;
import ch.unibas.medizin.osce.client.managed.ui.OfficeMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.OsceDayListView;
import ch.unibas.medizin.osce.client.managed.ui.OsceDayMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.OsceListView;
import ch.unibas.medizin.osce.client.managed.ui.OsceMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.OscePostListView;
import ch.unibas.medizin.osce.client.managed.ui.OscePostMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.OscePostRoomListView;
import ch.unibas.medizin.osce.client.managed.ui.OscePostRoomMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.PatientInRoleListView;
import ch.unibas.medizin.osce.client.managed.ui.PatientInRoleMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.PatientInSemesterListView;
import ch.unibas.medizin.osce.client.managed.ui.PatientInSemesterMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.ProfessionListView;
import ch.unibas.medizin.osce.client.managed.ui.ProfessionMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleBaseItemListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleBaseItemMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleItemAccessListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleItemAccessMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleParticipantListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleParticipantMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleSubItemValueListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleSubItemValueMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleTableItemListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleTableItemMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleTableItemValueListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleTableItemValueMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleTemplateListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleTemplateMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleTopicListView;
import ch.unibas.medizin.osce.client.managed.ui.RoleTopicMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.RoomListView;
import ch.unibas.medizin.osce.client.managed.ui.RoomMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.ScarListView;
import ch.unibas.medizin.osce.client.managed.ui.ScarMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.SemesterListView;
import ch.unibas.medizin.osce.client.managed.ui.SemesterMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.SimpleSearchCriteriaListView;
import ch.unibas.medizin.osce.client.managed.ui.SimpleSearchCriteriaMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.SpecialisationListView;
import ch.unibas.medizin.osce.client.managed.ui.SpecialisationMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.SpokenLanguageListView;
import ch.unibas.medizin.osce.client.managed.ui.SpokenLanguageMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.StandardizedPatientListView;
import ch.unibas.medizin.osce.client.managed.ui.StandardizedPatientMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.StandardizedRoleListView;
import ch.unibas.medizin.osce.client.managed.ui.StandardizedRoleMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.StudentListView;
import ch.unibas.medizin.osce.client.managed.ui.StudentMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.StudentOscesListView;
import ch.unibas.medizin.osce.client.managed.ui.StudentOscesMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.TaskListView;
import ch.unibas.medizin.osce.client.managed.ui.TaskMobileListView;
import ch.unibas.medizin.osce.client.managed.ui.UsedMaterialListView;
import ch.unibas.medizin.osce.client.managed.ui.UsedMaterialMobileListView;
import ch.unibas.medizin.osce.client.scaffold.ScaffoldApp;
import ch.unibas.medizin.osce.client.scaffold.place.ProxyListPlace;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.activity.shared.ActivityMapper;
import com.google.gwt.place.shared.Place;
import com.google.gwt.place.shared.PlaceController;
import com.google.inject.Inject;

public abstract class ApplicationMasterActivities_Roo_Gwt implements ActivityMapper {

    protected ApplicationRequestFactory requests;

    protected PlaceController placeController;

    public Activity getActivity(Place place) {
        if (!(place instanceof ProxyListPlace)) {
            return null;
        }
        ProxyListPlace listPlace = (ProxyListPlace) place;
        return new ApplicationEntityTypesProcessor<Activity>() {

            @Override
            public void handleUsedMaterial(UsedMaterialProxy isNull) {
                setResult(new UsedMaterialListActivity(requests, ScaffoldApp.isMobile() ? UsedMaterialMobileListView.instance() : UsedMaterialListView.instance(), placeController));
            }

            @Override
            public void handleTask(TaskProxy isNull) {
                setResult(new TaskListActivity(requests, ScaffoldApp.isMobile() ? TaskMobileListView.instance() : TaskListView.instance(), placeController));
            }

            @Override
            public void handleStudent(StudentProxy isNull) {
                setResult(new StudentListActivity(requests, ScaffoldApp.isMobile() ? StudentMobileListView.instance() : StudentListView.instance(), placeController));
            }

            @Override
            public void handleStudentOsces(StudentOscesProxy isNull) {
                setResult(new StudentOscesListActivity(requests, ScaffoldApp.isMobile() ? StudentOscesMobileListView.instance() : StudentOscesListView.instance(), placeController));
            }

            @Override
            public void handleStandardizedRole(StandardizedRoleProxy isNull) {
                setResult(new StandardizedRoleListActivity(requests, ScaffoldApp.isMobile() ? StandardizedRoleMobileListView.instance() : StandardizedRoleListView.instance(), placeController));
            }

            @Override
            public void handleStandardizedPatient(StandardizedPatientProxy isNull) {
                setResult(new StandardizedPatientListActivity(requests, ScaffoldApp.isMobile() ? StandardizedPatientMobileListView.instance() : StandardizedPatientListView.instance(), placeController));
            }

            @Override
            public void handleSpokenLanguage(SpokenLanguageProxy isNull) {
                setResult(new SpokenLanguageListActivity(requests, ScaffoldApp.isMobile() ? SpokenLanguageMobileListView.instance() : SpokenLanguageListView.instance(), placeController));
            }

            @Override
            public void handleSpecialisation(SpecialisationProxy isNull) {
                setResult(new SpecialisationListActivity(requests, ScaffoldApp.isMobile() ? SpecialisationMobileListView.instance() : SpecialisationListView.instance(), placeController));
            }

            @Override
            public void handleSimpleSearchCriteria(SimpleSearchCriteriaProxy isNull) {
                setResult(new SimpleSearchCriteriaListActivity(requests, ScaffoldApp.isMobile() ? SimpleSearchCriteriaMobileListView.instance() : SimpleSearchCriteriaListView.instance(), placeController));
            }

            @Override
            public void handleSemester(SemesterProxy isNull) {
                setResult(new SemesterListActivity(requests, ScaffoldApp.isMobile() ? SemesterMobileListView.instance() : SemesterListView.instance(), placeController));
            }

            @Override
            public void handleScar(ScarProxy isNull) {
                setResult(new ScarListActivity(requests, ScaffoldApp.isMobile() ? ScarMobileListView.instance() : ScarListView.instance(), placeController));
            }

            @Override
            public void handleRoom(RoomProxy isNull) {
                setResult(new RoomListActivity(requests, ScaffoldApp.isMobile() ? RoomMobileListView.instance() : RoomListView.instance(), placeController));
            }

            @Override
            public void handleRoleTopic(RoleTopicProxy isNull) {
                setResult(new RoleTopicListActivity(requests, ScaffoldApp.isMobile() ? RoleTopicMobileListView.instance() : RoleTopicListView.instance(), placeController));
            }

            @Override
            public void handleRoleTemplate(RoleTemplateProxy isNull) {
                setResult(new RoleTemplateListActivity(requests, ScaffoldApp.isMobile() ? RoleTemplateMobileListView.instance() : RoleTemplateListView.instance(), placeController));
            }

            @Override
            public void handleRoleTableItemValue(RoleTableItemValueProxy isNull) {
                setResult(new RoleTableItemValueListActivity(requests, ScaffoldApp.isMobile() ? RoleTableItemValueMobileListView.instance() : RoleTableItemValueListView.instance(), placeController));
            }

            @Override
            public void handleRoleTableItem(RoleTableItemProxy isNull) {
                setResult(new RoleTableItemListActivity(requests, ScaffoldApp.isMobile() ? RoleTableItemMobileListView.instance() : RoleTableItemListView.instance(), placeController));
            }

            @Override
            public void handleRoleSubItemValue(RoleSubItemValueProxy isNull) {
                setResult(new RoleSubItemValueListActivity(requests, ScaffoldApp.isMobile() ? RoleSubItemValueMobileListView.instance() : RoleSubItemValueListView.instance(), placeController));
            }

            @Override
            public void handleRoleParticipant(RoleParticipantProxy isNull) {
                setResult(new RoleParticipantListActivity(requests, ScaffoldApp.isMobile() ? RoleParticipantMobileListView.instance() : RoleParticipantListView.instance(), placeController));
            }

            @Override
            public void handleRoleItemAccess(RoleItemAccessProxy isNull) {
                setResult(new RoleItemAccessListActivity(requests, ScaffoldApp.isMobile() ? RoleItemAccessMobileListView.instance() : RoleItemAccessListView.instance(), placeController));
            }

            @Override
            public void handleRoleBaseItem(RoleBaseItemProxy isNull) {
                setResult(new RoleBaseItemListActivity(requests, ScaffoldApp.isMobile() ? RoleBaseItemMobileListView.instance() : RoleBaseItemListView.instance(), placeController));
            }

            @Override
            public void handleProfession(ProfessionProxy isNull) {
                setResult(new ProfessionListActivity(requests, ScaffoldApp.isMobile() ? ProfessionMobileListView.instance() : ProfessionListView.instance(), placeController));
            }

            @Override
            public void handlePatientInSemester(PatientInSemesterProxy isNull) {
                setResult(new PatientInSemesterListActivity(requests, ScaffoldApp.isMobile() ? PatientInSemesterMobileListView.instance() : PatientInSemesterListView.instance(), placeController));
            }

            @Override
            public void handlePatientInRole(PatientInRoleProxy isNull) {
                setResult(new PatientInRoleListActivity(requests, ScaffoldApp.isMobile() ? PatientInRoleMobileListView.instance() : PatientInRoleListView.instance(), placeController));
            }

            @Override
            public void handleOsce(OsceProxy isNull) {
                setResult(new OsceListActivity(requests, ScaffoldApp.isMobile() ? OsceMobileListView.instance() : OsceListView.instance(), placeController));
            }

            @Override
            public void handleOscePostRoom(OscePostRoomProxy isNull) {
                setResult(new OscePostRoomListActivity(requests, ScaffoldApp.isMobile() ? OscePostRoomMobileListView.instance() : OscePostRoomListView.instance(), placeController));
            }

            @Override
            public void handleOscePost(OscePostProxy isNull) {
                setResult(new OscePostListActivity(requests, ScaffoldApp.isMobile() ? OscePostMobileListView.instance() : OscePostListView.instance(), placeController));
            }

            @Override
            public void handleOsceDay(OsceDayProxy isNull) {
                setResult(new OsceDayListActivity(requests, ScaffoldApp.isMobile() ? OsceDayMobileListView.instance() : OsceDayListView.instance(), placeController));
            }

            @Override
            public void handleOffice(OfficeProxy isNull) {
                setResult(new OfficeListActivity(requests, ScaffoldApp.isMobile() ? OfficeMobileListView.instance() : OfficeListView.instance(), placeController));
            }

            @Override
            public void handleNationality(NationalityProxy isNull) {
                setResult(new NationalityListActivity(requests, ScaffoldApp.isMobile() ? NationalityMobileListView.instance() : NationalityListView.instance(), placeController));
            }

            @Override
            public void handleMediaContentType(MediaContentTypeProxy isNull) {
                setResult(new MediaContentTypeListActivity(requests, ScaffoldApp.isMobile() ? MediaContentTypeMobileListView.instance() : MediaContentTypeListView.instance(), placeController));
            }

            @Override
            public void handleMediaContent(MediaContentProxy isNull) {
                setResult(new MediaContentListActivity(requests, ScaffoldApp.isMobile() ? MediaContentMobileListView.instance() : MediaContentListView.instance(), placeController));
            }

            @Override
            public void handleMaterialList(MaterialListProxy isNull) {
                setResult(new MaterialListListActivity(requests, ScaffoldApp.isMobile() ? MaterialListMobileListView.instance() : MaterialListListView.instance(), placeController));
            }

            @Override
            public void handleLogEntry(LogEntryProxy isNull) {
                setResult(new LogEntryListActivity(requests, ScaffoldApp.isMobile() ? LogEntryMobileListView.instance() : LogEntryListView.instance(), placeController));
            }

            @Override
            public void handleLangSkill(LangSkillProxy isNull) {
                setResult(new LangSkillListActivity(requests, ScaffoldApp.isMobile() ? LangSkillMobileListView.instance() : LangSkillListView.instance(), placeController));
            }

            @Override
            public void handleKeyword(KeywordProxy isNull) {
                setResult(new KeywordListActivity(requests, ScaffoldApp.isMobile() ? KeywordMobileListView.instance() : KeywordListView.instance(), placeController));
            }

            @Override
            public void handleFile(FileProxy isNull) {
                setResult(new FileListActivity(requests, ScaffoldApp.isMobile() ? FileMobileListView.instance() : FileListView.instance(), placeController));
            }

            @Override
            public void handleEliminationCriterion(EliminationCriterionProxy isNull) {
                setResult(new EliminationCriterionListActivity(requests, ScaffoldApp.isMobile() ? EliminationCriterionMobileListView.instance() : EliminationCriterionListView.instance(), placeController));
            }

            @Override
            public void handleDoctor(DoctorProxy isNull) {
                setResult(new DoctorListActivity(requests, ScaffoldApp.isMobile() ? DoctorMobileListView.instance() : DoctorListView.instance(), placeController));
            }

            @Override
            public void handleDescription(DescriptionProxy isNull) {
                setResult(new DescriptionListActivity(requests, ScaffoldApp.isMobile() ? DescriptionMobileListView.instance() : DescriptionListView.instance(), placeController));
            }

            @Override
            public void handleCourse(CourseProxy isNull) {
                setResult(new CourseListActivity(requests, ScaffoldApp.isMobile() ? CourseMobileListView.instance() : CourseListView.instance(), placeController));
            }

            @Override
            public void handleClinic(ClinicProxy isNull) {
                setResult(new ClinicListActivity(requests, ScaffoldApp.isMobile() ? ClinicMobileListView.instance() : ClinicListView.instance(), placeController));
            }

            @Override
            public void handleChecklistTopic(ChecklistTopicProxy isNull) {
                setResult(new ChecklistTopicListActivity(requests, ScaffoldApp.isMobile() ? ChecklistTopicMobileListView.instance() : ChecklistTopicListView.instance(), placeController));
            }

            @Override
            public void handleChecklistQuestion(ChecklistQuestionProxy isNull) {
                setResult(new ChecklistQuestionListActivity(requests, ScaffoldApp.isMobile() ? ChecklistQuestionMobileListView.instance() : ChecklistQuestionListView.instance(), placeController));
            }

            @Override
            public void handleChecklistOption(ChecklistOptionProxy isNull) {
                setResult(new ChecklistOptionListActivity(requests, ScaffoldApp.isMobile() ? ChecklistOptionMobileListView.instance() : ChecklistOptionListView.instance(), placeController));
            }

            @Override
            public void handleChecklistCriteria(ChecklistCriteriaProxy isNull) {
                setResult(new ChecklistCriteriaListActivity(requests, ScaffoldApp.isMobile() ? ChecklistCriteriaMobileListView.instance() : ChecklistCriteriaListView.instance(), placeController));
            }

            @Override
            public void handleCheckList(CheckListProxy isNull) {
                setResult(new CheckListListActivity(requests, ScaffoldApp.isMobile() ? CheckListMobileListView.instance() : CheckListListView.instance(), placeController));
            }

            @Override
            public void handleBankaccount(BankaccountProxy isNull) {
                setResult(new BankaccountListActivity(requests, ScaffoldApp.isMobile() ? BankaccountMobileListView.instance() : BankaccountListView.instance(), placeController));
            }

            @Override
            public void handleAssignment(AssignmentProxy isNull) {
                setResult(new AssignmentListActivity(requests, ScaffoldApp.isMobile() ? AssignmentMobileListView.instance() : AssignmentListView.instance(), placeController));
            }

            @Override
            public void handleAnamnesisForm(AnamnesisFormProxy isNull) {
                setResult(new AnamnesisFormListActivity(requests, ScaffoldApp.isMobile() ? AnamnesisFormMobileListView.instance() : AnamnesisFormListView.instance(), placeController));
            }

            @Override
            public void handleAnamnesisChecksValue(AnamnesisChecksValueProxy isNull) {
                setResult(new AnamnesisChecksValueListActivity(requests, ScaffoldApp.isMobile() ? AnamnesisChecksValueMobileListView.instance() : AnamnesisChecksValueListView.instance(), placeController));
            }

            @Override
            public void handleAnamnesisCheck(AnamnesisCheckProxy isNull) {
                setResult(new AnamnesisCheckListActivity(requests, ScaffoldApp.isMobile() ? AnamnesisCheckMobileListView.instance() : AnamnesisCheckListView.instance(), placeController));
            }

            @Override
            public void handleAdvancedSearchCriteria(AdvancedSearchCriteriaProxy isNull) {
                setResult(new AdvancedSearchCriteriaListActivity(requests, ScaffoldApp.isMobile() ? AdvancedSearchCriteriaMobileListView.instance() : AdvancedSearchCriteriaListView.instance(), placeController));
            }

            @Override
            public void handleAdministrator(AdministratorProxy isNull) {
                setResult(new AdministratorListActivity(requests, ScaffoldApp.isMobile() ? AdministratorMobileListView.instance() : AdministratorListView.instance(), placeController));
            }
        }.process(listPlace.getProxyClass());
    }
}
