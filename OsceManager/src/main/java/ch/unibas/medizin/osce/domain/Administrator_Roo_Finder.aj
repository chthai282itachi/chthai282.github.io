// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ch.unibas.medizin.osce.domain;

import ch.unibas.medizin.osce.domain.Administrator;
import ch.unibas.medizin.osce.domain.Semester;
import java.lang.String;
import java.util.Set;
import javax.persistence.EntityManager;
import javax.persistence.TypedQuery;

privileged aspect Administrator_Roo_Finder {
    
    public static TypedQuery<Administrator> Administrator.findAdministratorsByNameNotEqualsAndPreNameLikeOrSemesters(String name, String preName, Set<Semester> semesters) {
        if (name == null || name.length() == 0) throw new IllegalArgumentException("The name argument is required");
        if (preName == null || preName.length() == 0) throw new IllegalArgumentException("The preName argument is required");
        preName = preName.replace('*', '%');
        if (preName.charAt(0) != '%') {
            preName = "%" + preName;
        }
        if (preName.charAt(preName.length() - 1) != '%') {
            preName = preName + "%";
        }
        if (semesters == null) throw new IllegalArgumentException("The semesters argument is required");
        EntityManager em = Administrator.entityManager();
        StringBuilder queryBuilder = new StringBuilder("SELECT o FROM Administrator AS o WHERE o.name != :name  AND LOWER(o.preName) LIKE LOWER(:preName)  OR");
        for (int i = 0; i < semesters.size(); i++) {
            if (i > 0) queryBuilder.append(" AND");
            queryBuilder.append(" :semesters_item").append(i).append(" MEMBER OF o.semesters");
        }
        TypedQuery<Administrator> q = em.createQuery(queryBuilder.toString(), Administrator.class);
        q.setParameter("name", name);
        q.setParameter("preName", preName);
        int semestersIndex = 0;
        for (Semester _semester: semesters) {
            q.setParameter("semesters_item" + semestersIndex++, _semester);
        }
        return q;
    }
    
}
