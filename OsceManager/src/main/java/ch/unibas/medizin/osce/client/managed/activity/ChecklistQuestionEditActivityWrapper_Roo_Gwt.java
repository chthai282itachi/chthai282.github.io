// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.activity;

import ch.unibas.medizin.osce.client.managed.activity.ChecklistQuestionEditActivityWrapper.View;
import ch.unibas.medizin.osce.client.managed.request.ApplicationRequestFactory;
import ch.unibas.medizin.osce.client.managed.request.ChecklistCriteriaProxy;
import ch.unibas.medizin.osce.client.managed.request.ChecklistOptionProxy;
import ch.unibas.medizin.osce.client.managed.request.ChecklistQuestionProxy;
import ch.unibas.medizin.osce.client.managed.request.ChecklistTopicProxy;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistCriteriaSetEditor;
import ch.unibas.medizin.osce.client.managed.ui.ChecklistOptionSetEditor;
import ch.unibas.medizin.osce.client.scaffold.activity.IsScaffoldMobileActivity;
import ch.unibas.medizin.osce.client.scaffold.place.ProxyEditView;
import ch.unibas.medizin.osce.client.scaffold.place.ProxyListPlace;
import ch.unibas.medizin.osce.client.scaffold.place.ProxyPlace;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.requestfactory.shared.EntityProxyId;
import com.google.gwt.requestfactory.shared.Receiver;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Set;

public abstract class ChecklistQuestionEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setCheckListTopicPickerValues(Collections.<ChecklistTopicProxy>emptyList());
        requests.checklistTopicRequest().findChecklistTopicEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.ChecklistTopicProxyRenderer.instance().getPaths()).fire(new Receiver<List<ChecklistTopicProxy>>() {

            public void onSuccess(List<ChecklistTopicProxy> response) {
                List<ChecklistTopicProxy> values = new ArrayList<ChecklistTopicProxy>();
                values.add(null);
                values.addAll(response);
                view.setCheckListTopicPickerValues(values);
            }
        });
        view.setCheckListOptionsPickerValues(Collections.<ChecklistOptionProxy>emptyList());
        requests.checklistOptionRequest().findChecklistOptionEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.ChecklistOptionProxyRenderer.instance().getPaths()).fire(new Receiver<List<ChecklistOptionProxy>>() {

            public void onSuccess(List<ChecklistOptionProxy> response) {
                List<ChecklistOptionProxy> values = new ArrayList<ChecklistOptionProxy>();
                values.add(null);
                values.addAll(response);
                view.setCheckListOptionsPickerValues(values);
            }
        });
        view.setCheckListCriteriasPickerValues(Collections.<ChecklistCriteriaProxy>emptyList());
        requests.checklistCriteriaRequest().findChecklistCriteriaEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.ChecklistCriteriaProxyRenderer.instance().getPaths()).fire(new Receiver<List<ChecklistCriteriaProxy>>() {

            public void onSuccess(List<ChecklistCriteriaProxy> response) {
                List<ChecklistCriteriaProxy> values = new ArrayList<ChecklistCriteriaProxy>();
                values.add(null);
                values.addAll(response);
                view.setCheckListCriteriasPickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }

    public interface View_Roo_Gwt<V extends ch.unibas.medizin.osce.client.scaffold.place.ProxyEditView<ch.unibas.medizin.osce.client.managed.request.ChecklistQuestionProxy, V>> extends ProxyEditView<ChecklistQuestionProxy, V> {

        void setCheckListTopicPickerValues(Collection<ChecklistTopicProxy> values);

        void setCheckListOptionsPickerValues(Collection<ChecklistOptionProxy> values);

        void setCheckListCriteriasPickerValues(Collection<ChecklistCriteriaProxy> values);
    }
}
