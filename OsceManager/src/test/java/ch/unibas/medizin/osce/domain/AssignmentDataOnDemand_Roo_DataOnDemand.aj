// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ch.unibas.medizin.osce.domain;

import ch.unibas.medizin.osce.domain.Assignment;
import ch.unibas.medizin.osce.domain.DoctorDataOnDemand;
import ch.unibas.medizin.osce.domain.OsceDayDataOnDemand;
import ch.unibas.medizin.osce.domain.OscePostRoomDataOnDemand;
import ch.unibas.medizin.osce.domain.PatientInRoleDataOnDemand;
import ch.unibas.medizin.osce.domain.StudentDataOnDemand;
import java.util.List;
import java.util.Random;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

privileged aspect AssignmentDataOnDemand_Roo_DataOnDemand {
    
    declare @type: AssignmentDataOnDemand: @Component;
    
    private Random AssignmentDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Assignment> AssignmentDataOnDemand.data;
    
    @Autowired
    private OsceDayDataOnDemand AssignmentDataOnDemand.osceDayDataOnDemand;
    
    @Autowired
    private OscePostRoomDataOnDemand AssignmentDataOnDemand.oscePostRoomDataOnDemand;
    
    @Autowired
    private StudentDataOnDemand AssignmentDataOnDemand.studentDataOnDemand;
    
    @Autowired
    private PatientInRoleDataOnDemand AssignmentDataOnDemand.patientInRoleDataOnDemand;
    
    @Autowired
    private DoctorDataOnDemand AssignmentDataOnDemand.doctorDataOnDemand;
    
    public Assignment AssignmentDataOnDemand.getNewTransientAssignment(int index) {
        ch.unibas.medizin.osce.domain.Assignment obj = new ch.unibas.medizin.osce.domain.Assignment();
        setType(obj, index);
        setSlotNumber(obj, index);
        setTimeStart(obj, index);
        setTimeEnd(obj, index);
        setOsceDay(obj, index);
        setOscePostRoom(obj, index);
        setStudent(obj, index);
        setPatientInRole(obj, index);
        setExaminer(obj, index);
        return obj;
    }
    
    private void AssignmentDataOnDemand.setType(Assignment obj, int index) {
        ch.unibas.medizin.osce.shared.AssignmentTypes type = ch.unibas.medizin.osce.shared.AssignmentTypes.class.getEnumConstants()[0];
        obj.setType(type);
    }
    
    private void AssignmentDataOnDemand.setSlotNumber(Assignment obj, int index) {
        java.lang.Integer slotNumber = new Integer(index);
        obj.setSlotNumber(slotNumber);
    }
    
    private void AssignmentDataOnDemand.setTimeStart(Assignment obj, int index) {
        java.util.Date timeStart = new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setTimeStart(timeStart);
    }
    
    private void AssignmentDataOnDemand.setTimeEnd(Assignment obj, int index) {
        java.util.Date timeEnd = new java.util.GregorianCalendar(java.util.Calendar.getInstance().get(java.util.Calendar.YEAR), java.util.Calendar.getInstance().get(java.util.Calendar.MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.DAY_OF_MONTH), java.util.Calendar.getInstance().get(java.util.Calendar.HOUR_OF_DAY), java.util.Calendar.getInstance().get(java.util.Calendar.MINUTE), java.util.Calendar.getInstance().get(java.util.Calendar.SECOND) + new Double(Math.random() * 1000).intValue()).getTime();
        obj.setTimeEnd(timeEnd);
    }
    
    private void AssignmentDataOnDemand.setOsceDay(Assignment obj, int index) {
        ch.unibas.medizin.osce.domain.OsceDay osceDay = osceDayDataOnDemand.getRandomOsceDay();
        obj.setOsceDay(osceDay);
    }
    
    private void AssignmentDataOnDemand.setOscePostRoom(Assignment obj, int index) {
        ch.unibas.medizin.osce.domain.OscePostRoom oscePostRoom = oscePostRoomDataOnDemand.getRandomOscePostRoom();
        obj.setOscePostRoom(oscePostRoom);
    }
    
    private void AssignmentDataOnDemand.setStudent(Assignment obj, int index) {
        ch.unibas.medizin.osce.domain.Student student = studentDataOnDemand.getRandomStudent();
        obj.setStudent(student);
    }
    
    private void AssignmentDataOnDemand.setPatientInRole(Assignment obj, int index) {
        ch.unibas.medizin.osce.domain.PatientInRole patientInRole = patientInRoleDataOnDemand.getRandomPatientInRole();
        obj.setPatientInRole(patientInRole);
    }
    
    private void AssignmentDataOnDemand.setExaminer(Assignment obj, int index) {
        ch.unibas.medizin.osce.domain.Doctor examiner = doctorDataOnDemand.getRandomDoctor();
        obj.setExaminer(examiner);
    }
    
    public Assignment AssignmentDataOnDemand.getSpecificAssignment(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Assignment obj = data.get(index);
        return Assignment.findAssignment(obj.getId());
    }
    
    public Assignment AssignmentDataOnDemand.getRandomAssignment() {
        init();
        Assignment obj = data.get(rnd.nextInt(data.size()));
        return Assignment.findAssignment(obj.getId());
    }
    
    public boolean AssignmentDataOnDemand.modifyAssignment(Assignment obj) {
        return false;
    }
    
    public void AssignmentDataOnDemand.init() {
        data = ch.unibas.medizin.osce.domain.Assignment.findAssignmentEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Assignment' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<ch.unibas.medizin.osce.domain.Assignment>();
        for (int i = 0; i < 10; i++) {
            ch.unibas.medizin.osce.domain.Assignment obj = getNewTransientAssignment(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
